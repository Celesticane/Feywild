buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.16.5-1.2.4'
group = 'com.feywild.feywild'
archivesBaseName = project.name

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    final Closure defaultRun = {
        property 'forge.logging.console.level', 'debug'
        property 'forge.logging.markers', 'REGISTRIES'
        property 'mixin.env.remapRefMap', 'true'
        property 'mixin.env.refMapRemappingFile', project.createSrgToMcp.getOutput().get().getAsFile().toPath().toAbsolutePath().normalize().toString()
        mods {
            feywild {
                source sourceSets.main
            }
        }
    }
    runs {
        client {
            workingDirectory project.file('runClient')
        }.with(defaultRun)
        server {
            workingDirectory project.file('runServer')
        }.with(defaultRun)
        data {
            workingDirectory project.file('runData')
            args '--mod', 'feywild', '--all', '--output', file('src/generated/resources'), '--existing', file('src/main/resources')
        }.with(defaultRun)
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.13'

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "feywild",
                "Specification-Vendor"    : "feywildsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "feywildsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}


repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url "https://maven.blamejared.com" }
    maven { // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven { // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven { url 'https://maven.melanx.de'}
}

dependencies {
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-1.16.5:3.0.41")
    implementation fg.deobf("io.github.noeppi_noeppi.mods:LibX:1.16.3-1.0.78")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

    compileOnly fg.deobf("mezz.jei:jei-1.16.5:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:${jei_version}")
}